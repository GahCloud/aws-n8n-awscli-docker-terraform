{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -660,
        -500
      ],
      "id": "3ef24ddf-bc04-4a17-bc3c-4c887b06fa9d",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "command": "aws ce get-cost-and-usage \\\n  --time-period Start=$(date -u -d \"2025-06-01\" +%Y-%m-%d),End=$(date -u -d \"2025-07-01\" +%Y-%m-%d) \\\n  --granularity=DAILY \\\n  --metrics UnblendedCost \\\n  --group-by Type=DIMENSION,Key=LINKED_ACCOUNT\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -400,
        -520
      ],
      "id": "64d15e57-a6a2-4f21-8bb1-e564ede24fd3",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "jsCode": "const raw = items[0].json.stdout; // Pega a saída do comando\n\nlet data;\ntry {\n  data = JSON.parse(raw); // Transforma string em objeto\n} catch (e) {\n  throw new Error(\"Erro ao fazer parse do JSON de stdout\");\n}\n\nconst resultados = [];\n\nfor (const entry of data.ResultsByTime) {\n  const date = entry.TimePeriod.Start;\n\n  if (entry.Groups && entry.Groups.length > 0) {\n    // Process groups if they exist\n    for (const group of entry.Groups) {\n      resultados.push({\n        json: {\n          data: date,\n          conta: group.Keys[0],\n          custo_usd: group.Metrics.UnblendedCost.Amount\n        }\n      });\n    }\n  } else if (entry.Total && entry.Total.UnblendedCost) {\n    // If no groups, but Total.UnblendedCost exists, use that\n    resultados.push({\n      json: {\n        data: date,\n        conta: \"N/A\", // Or a default like \"Total\" or leave blank if preferred for total entries\n        custo_usd: entry.Total.UnblendedCost.Amount\n      }\n    });\n  }\n  // If neither groups nor a total cost are present, that entry will be skipped.\n  // Based on your JSON, all relevant entries either have groups or a total cost.\n}\n\nreturn resultados;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        -520
      ],
      "id": "a33a33b0-d2b0-4445-bbc6-14b078aac3b7",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1iBA34tMcIU1QmHlirSyAnwo1krq0iniLZZhtcb9gpCM",
          "mode": "list",
          "cachedResultName": "Costs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iBA34tMcIU1QmHlirSyAnwo1krq0iniLZZhtcb9gpCM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iBA34tMcIU1QmHlirSyAnwo1krq0iniLZZhtcb9gpCM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "conta",
              "displayName": "conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "custo_usd",
              "displayName": "custo_usd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "RAW"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -80,
        -520
      ],
      "id": "84996827-6946-4b33-ab34-c5a1e8f2087c",
      "name": "Append or update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jSNecMwRR5anVtZT",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://chat.googleapis.com/v1/spaces/AAQAOD4TkW0/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=qS3qTiRHSPy5_QwqZW661oxjdMM8-hSzM-lq9dNNRf4",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "RAW",
        "body": "={\n  \"text\": \"✅ Os custos da planilha foram preenchidos com sucesso!\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        260,
        -500
      ],
      "id": "f9b28682-8b1e-4bdb-b0b1-8599ef35d325",
      "name": "HTTP Request"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        80,
        -500
      ],
      "id": "00cc4c92-056e-4324-b3f8-f194d74dd639",
      "name": "Limit"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "81a03eb4-5ea3-4b1d-9a56-528ab1db4a05",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0cb45af91f221518cc8f0921129a2b8ad4b109d912a6adf271466b781e70efd9"
  },
  "id": "t2EoKNuUUtzT3Jsi",
  "tags": []
}